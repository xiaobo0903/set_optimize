[net.core.netdev_max_backlog]
val=400000
def=1000
name=设置队列的数据包的最大数目
#该参数决定了，网络设备接收数据包的速率比内核处理这些包的速率快时，允许送到队列的数据包的最大数目。。如果超过这里设置的数字，连接就会复位并输出警告信息。这个限制仅仅是为了防止简单的DoS攻击。此值不能太小。

[net.core.optmem_max]
val=10000000
def=300
name=套接字所允许的最大缓冲区的大小
#该参数指定了每个套接字所允许的最大缓冲区的大小

[net.core.rmem_default]
val=10000000
def=10240
name=接收套接字缓冲区缺省大小
#指定了接收套接字缓冲区大小的缺省值（以字节为单位）。

[net.core.rmem_max]
val=16777216
def=110592
name=接收套接字缓冲区的最大值
#指定了接收套接字缓冲区大小的最大值（以字节为单位）。

[net.core.somaxconn]
val = 100000
def=128
name=每个端口最大的监听队列的长度
#Linux kernel参数，表示socket监听的backlog(监听队列)上限,定义了系统中每一个端口最大的监听队列的长度;

[net.core.wmem_default]
val = 10000000
def=10240
name=TCP发送窗口缺省大小
#定义默认的发送窗口大小；对于更大的 BDP 来说，这个大小也应该更大。

[net.core.wmem_max]
val = 16777216
def=110592
name=TCP发送窗口最大值
#定义发送窗口的最大大小；对于更大的 BDP 来说，这个大小也应该更大。

[net.ipv4.conf.all.rp_filter]
val = 2
def = 0
name=反向路由校验, 0:关闭，1:严谨,2: 松散
#反向路由校验,可以减少DDoS攻击，防止IP Spoofing；0：关闭，1：严谨,2：松散

[net.ipv4.conf.default.rp_filter]
val = 2
def = 0
name=缺省反向路由校验, 0:关闭，1:严谨,2: 松散
#反向路由校验,可以减少DDoS攻击，防止IP Spoofing；0：关闭，1：严谨,2：松散

[net.ipv4.tcp_congestion_control]
val = bic
def=htcp
name=拥堵传输协议
#拥堵传输协议

[net.ipv4.tcp_window_scaling]
val = 1
def = 1
name=设置滑动窗口大小是否可变。为1时表示可变
#该文件表示设置tcp/ip会话的滑动窗口大小是否可变。为1时表示可变,这时候如果启用了该功能，可以使tcp/ip滑动窗口大小增大数个数量级，从而提高数据传输的能力。

[net.ipv4.tcp_ecn]
val = 0
def = 0
name=拥塞通告协议设置,0:关闭，1：开启
#把TCP的直接拥塞通告(tcp_ecn)关掉 

[net.ipv4.tcp_sack]
val = 1
def = 1
name=有选择的应答设置 0:关闭， 1:开启
#启用有选择的应答（Selective Acknowledgment），
#这可以通过有选择地应答乱序接收到的报文来提高性能（这样可以让发送者只发送丢失的报文段）；
#（对于广域网通信来说）这个选项应该启用，但是这会增加对 CPU 的占用。

[net.ipv4.tcp_max_tw_buckets]
val = 20000
def = 180000
name=超时等待套接字的最大数量
#表示系统同时保持TIME_WAIT套接字的最大数量

[net.ipv4.tcp_max_syn_backlog]
val = 8192
def = 1024
name = 等待连接的网络连接数
#表示SYN队列长度，默认1024，改成8192，可以容纳更多等待连接的网络连接数。

[net.ipv4.tcp_syncookies]
val = 1
def = 0
name=TCP同步标签，0:关闭, 1:开启
#该文件表示是否打开TCP同步标签(syncookie)，内核必须打开了 CONFIG_SYN_COOKIES项进行编译。同步标签(syncookie)可以防止一个套接字在有过多试图连接到达时引起过载,可防范少量SYN攻击，默认为0，表示关闭；。

[net.ipv4.tcp_timestamps]
val = 1
def = 1
name = 开启TCP时间戳
#开启TCP时间戳
#以一种比重发超时更精确的方法（请参阅 RFC 1323）来启用对 RTT 的计算；为了实现更好的性能应该启用这个选项。

[net.ipv4.tcp_tw_reuse]
val = 1
def = 0
name=开启连接重用
#表示开启重用。允许将TIME-WAIT sockets重新用于新的TCP连接，默认为0，表示关闭；

[net.ipv4.tcp_tw_recycle]
val = 1
def = 0
name=开启连接快速回收设置
#表示开启TCP连接中TIME-WAIT sockets的快速回收，默认为0，表示关闭。

[net.ipv4.tcp_fin_timeout]
val = 5
def = 60
name=连接关闭后对方反馈等待时间（秒）
#表示如果套接字由本端要求关闭，这个参数决定了它保持在FIN-WAIT-2状态的时间。(单位：秒）

[net.ipv4.tcp_keepalive_time]
val = 1800
def = 7200
name=活动检测时间设置
#表示当keepalive起用的时候，TCP发送keepalive消息的频度。缺省是2小时，改为30分钟。

[net.ipv4.tcp_keepalive_intvl]
val = 15
def = 75
name=活动检测发送间隔
#keepalive探测包的发送间隔

[net.ipv4.tcp_keepalive_probes]
val = 3
def = 9
name=无应答尝试次数
#如果对方不予应答，探测包的发送次数

[net.ipv4.tcp_mem]
val = 786432 1048576 26777216
def = 4096 67380 4194304
name=TCP内存设置
#确定 TCP 栈应该如何反映内存使用；每个值的单位都是内存页（通常是 4KB）。
#第一个值是内存使用的下限。
#第二个值是内存压力模式开始对缓冲区使用应用压力的上限。
#第三个值是内存上限。在这个层次上可以将报文丢弃，从而减少对内存的使用。对于较大的 BDP 可以增大这些值（但是要记住，其单位是内存页，而不是字节）。

[net.ipv4.tcp_rmem]
val = 8192 87380 33554432
def = 4096 67380 4194304
name=接收缓存区内存设置
#与 tcp_wmem 类似，不过它表示的是为自动调优所使用的接收缓冲区的值。

[net.ipv4.tcp_wmem]
val = 8192 65536 33554432
def = 4096 67380 4194304
name=发送缓存区内存设置
#为自动调优定义每个 socket 使用的内存。
#第一个值是为 socket 的发送缓冲区分配的最少字节数。
#第二个值是默认值（该值会被 wmem_default 覆盖），缓冲区在系统负载不重的情况下可以增长到这个值。
#第三个值是发送缓冲区空间的最大字节数（该值会被 wmem_max 覆盖）。

[net.ipv4.ip_local_port_range]
val = 1024 65000
def = 32768 61000
name=可使用端口范围
#表示用于向外连接的端口范围。缺省情况下很小：32768到61000，改为1024到65000。

#[net.ipv4.netfilter.ip_conntrack_max]
#val =655350
#def = 65535
#name=最大跟踪的TCP连接数
#设置系统对最大跟踪的TCP连接数的限制

[net.ipv4.tcp_slow_start_after_idle] = 0
val = 0
def = 1
name=慢启动设置 0:禁用 1:开启
#0:禁用慢启动
#关闭tcp的连接传输的慢启动，即先休止一段时间，再初始化拥塞窗口。

[net.ipv4.route.gc_timeout]
val = 100
def = 300
name=路由缓存刷新频率
#路由缓存刷新频率，当一个路由失败后多长时间跳到另一个路由，默认是300。

[net.ipv4.tcp_syn_retries]
val = 1
def = 1
name=发送SYN包的数量
#在内核放弃建立连接之前发送SYN包的数量。

[net.ipv4.icmp_echo_ignore_broadcasts]
val = 1
def = 0
name=响应icmp包的广播, 0:响启, 1:禁止
#响应icmp包的广播，0时，则广播ping不能被忽略。要将它设置为1

[net.ipv4.icmp_ignore_bogus_error_responses]
val = 1
def = 0
name =开启恶意icmp错误消息保护 0:关闭保护，1：开启
# 开启恶意icmp错误消息保护

[fs.file-max]
val = 2097152
def = 1024
name=设置文件最大句柄数
#设置文件最大句柄数

#修改消息队列长度
[kernel.msgmnb]
val = 65536
def = 16384
name=消息队列中的消息总和
#所有在消息队列中的消息总和的最大值
[kernel.msgmax]
val = 65536
def = 16384
name=消息队列中消息的数量限制
#消息队列中消息的数量限制

#[net.inet.udp.checksum]
#val = 1
#def = 0
#name=防止不正确的udp包的攻击,0:关闭，1:开启
#防止不正确的udp包的攻击

[net.ipv4.conf.default.accept_source_route]
val = 0
def = 0
name=接受含有源路由信息的ip包, 0:不接受，1:接受
#是否接受含有源路由信息的ip包。参数值为布尔值，1表示接受，0表示不接受。
#在充当网关的linux主机上缺省值为1，在一般的linux主机上缺省值为0。
#从安全性角度出发，建议你关闭该功能。

[kernel.shmmax]
val = 3865470566
def = 2097152
name=单个共享内存段的最大值
#单个共享内存段的最大值；4G*1024*1024*1024*0.9
[kernel.shmall]
val = 262144
def = 4096
name=可使用的内存段的最大值
#可使用的内存段的最大值；
[vm.swappiness]
val=20
def=60
name=内存在使用到80%的时候